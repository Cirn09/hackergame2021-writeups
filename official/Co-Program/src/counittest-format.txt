对于每次 co-unittest，你会得到如下格式的输出

    x=1, y=2, ans=3
    x=1, y=3, ans=4
    x=1, y=4, ans=5
    x=1, y=5, ans=6
    x=1, y=6, ans=7

共五行。你要根据 co-unittest 写出一个整数类型表达式，例如对于上面的例子，可以写出程序：

    x+y

一个稍复杂点的例子：针对如下输出

    x=21419314478, y=47599200002, ans=20522201246
    x=23916443849, y=25102677129, ans=14298034387
    x=50324426130, y=48448305333, ans=28884138685
    x=11636800575, y=55024141665, ans=17812404063
    x=19216665766, y=26441173260, ans=19682102160

可以给出下面这段表达式

    if((x<=(x*x)),if((x<=(y-(x*x))),if((x<=y),((-(y+(y+y)))%x),(((y-x)%(y+y))-x)),(((-(y+y))%x)-y)),(((-y)%x)-(y+y)))

每组挑战限时 30 秒。所有挑战都是随机生成的，有时可能无法一下求解出 7 组。确信自己的解法没问题的话，不妨多试几次！

可以使用的整数表达式的运算有：
0. x 和 y: 两个变量
1. 相反数 `-`
2. 加法 `+`
3. 减法 `-`
4. 乘法 `*`
5. 除法 `/`，除数为 0 时，除法结果为 2^36-1
6. 取模 `%`，除数为 0 时，求模结果为被除数
7. `if(bool, int, int)`

可以使用的布尔类型表达式的运算有：
1. `true`
2. `false`
3. `intExpr<=intExpr`
4. `intExpr=intExpr`
5. `!boolExpr`
6. `boolExpr&&boolExpr`
7. `boolExpr||boolExpr`
